<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>Crew</display-name>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>


    <!-- ========== CONTEXT PARAMETERS ========== -->

    <!-- location of the spring context files -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/spring/root.xml
        </param-value>
    </context-param>

    <!-- log4j configuration file -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>

    <!-- webapp root key -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>crew.root</param-value>
    </context-param>

    <!-- ========== LISTENERS ========== -->

    <!-- Spring context listener -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- log4j listener -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>


    <!-- ========== FILTERS  ========== -->

    <!-- spring security filter chain -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <!-- iCalendar filter -->
    <filter>
        <filter-name>iCalendarFilter</filter-name>
        <filter-class>net.crew_vre.web.filters.ICalendarResponseFilter</filter-class>
    </filter>


    <!-- ========== FILTER MAPPINGS  ========== -->

    <!-- spring security filter mapping -->
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- iCalendar filter mappings -->
    <filter-mapping>
        <filter-name>iCalendarFilter</filter-name>
        <url-pattern>/eventCalendar.do</url-pattern>
    </filter-mapping>

    <!-- ========== SERVLETS  ========== -->

    <!-- spring MVC dispatcher servlet  -->
    <servlet>
        <servlet-name>crew</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>namespace</param-name>
            <param-value>spring/crew-servlet</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>

    <!-- caboto jersey servlet -->
    <servlet>
        <servlet-name>Caboto Jersey Spring Integration</servlet-name>
        <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.resourceConfigClass</param-name>
            <param-value>com.sun.jersey.api.core.PackagesResourceConfig</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>org.caboto.rest</param-value>
        </init-param>
    </servlet>

    <!-- CREW jersey servlet -->
    <servlet>
        <servlet-name>CREW Jersey Spring Integration</servlet-name>
        <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.resourceConfigClass</param-name>
            <param-value>com.sun.jersey.api.core.PackagesResourceConfig</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>net.crew_vre.events.rest;net.crew_vre.rest.providers;org.caboto.rest.providers</param-value>
        </init-param>
    </servlet>

    <!-- CREW FLV Servlet -->
    <servlet>
        <servlet-name>CREW FLV</servlet-name>
        <servlet-class>net.crew_vre.web.servlet.flv.FlvServlet</servlet-class>
        <init-param>
            <param-name>recordingDirectory</param-name>
            <param-value>${recordings.location}</param-value>
        </init-param>
        <init-param>
            <param-name>rtpTypeRepository</param-name>
            <param-value>/rtptypes.xml</param-value>
        </init-param>
    </servlet>

    <!-- CREW Image Servlet -->
    <servlet>
        <servlet-name>CREW Image</servlet-name>
        <servlet-class>net.crew_vre.web.servlet.image.ImageServlet</servlet-class>
        <init-param>
            <param-name>recordingDirectory</param-name>
            <param-value>${recordings.location}</param-value>
        </init-param>
        <init-param>
            <param-name>rtpTypeRepository</param-name>
            <param-value>/rtptypes.xml</param-value>
        </init-param>
    </servlet>


    <!-- ========== SERVLETS  ========== -->

    <!-- the main mapping for spring mvc controllers -->
    <servlet-mapping>
        <servlet-name>crew</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <!-- mappings for local repository output feed -->
    <servlet-mapping>
        <servlet-name>crew</servlet-name>
        <url-pattern>/repository/localEvents.rdf</url-pattern>
    </servlet-mapping>

    <!-- mappings for local repository kml output -->
    <servlet-mapping>
        <servlet-name>crew</servlet-name>
        <url-pattern>/repository/route.kml</url-pattern>
    </servlet-mapping>

    <!-- mappings for RSS feeds -->
    <servlet-mapping>
        <servlet-name>crew</servlet-name>
        <url-pattern>/feeds/upcomingEvents.xml</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>crew</servlet-name>
        <url-pattern>/feeds/recentlyAdded.xml</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>crew</servlet-name>
        <url-pattern>/feeds/comments/*</url-pattern>
    </servlet-mapping>

    <!-- jersey - annotation mappings -->
    <servlet-mapping>
        <servlet-name>Caboto Jersey Spring Integration</servlet-name>
        <url-pattern>/annotation/*</url-pattern>
    </servlet-mapping>

    <!-- jersey - crew mappings -->
    <servlet-mapping>
        <servlet-name>CREW Jersey Spring Integration</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <!-- CREW flv servlet -->
    <servlet-mapping>
        <servlet-name>CREW FLV</servlet-name>
        <url-pattern>/flv/*</url-pattern>
    </servlet-mapping>

    <!-- CREW flv servlet -->
    <servlet-mapping>
        <servlet-name>CREW Image</servlet-name>
        <url-pattern>/image/*</url-pattern>
    </servlet-mapping>

    <!-- MIME Types -->
    <mime-mapping>
        <extension>rdf</extension>
        <mime-type>application/rdf+xml</mime-type>
    </mime-mapping>
</web-app>
