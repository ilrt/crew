<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>Crew</display-name>

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!-- location of the spring context files -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/spring/crew-dao.xml,/WEB-INF/spring/crew-services.xml,
            /WEB-INF/spring/crew-facades.xml, /WEB-INF/spring/crew-facet-config.xml,
            /WEB-INF/spring/crew-feeds-config.xml, /WEB-INF/spring/caboto-context.xml,
            /WEB-INF/spring/dibden-context.xml
        </param-value>
    </context-param>

    <!-- log4j configuration file -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/classes/log4j.properties</param-value>
    </context-param>

    <!-- webapp root key -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>crew.root</param-value>
    </context-param>

    <!-- Spring context listener -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- log4j listener -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>


    <filter>
        <filter-name>iCalendarFilter</filter-name>
        <filter-class>net.crew_vre.web.filters.ICalendarResponseFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>iCalendarFilter</filter-name>
        <url-pattern>/eventCalendar.do</url-pattern>
    </filter-mapping>

    <!-- crew servlet -->
    <servlet>
        <servlet-name>crew</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>namespace</param-name>
            <param-value>spring/crew-servlet</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- jersey servlet -->
    <servlet>
        <servlet-name>Jersey Spring Integration</servlet-name>
        <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.resourceConfigClass</param-name>
            <param-value>com.sun.jersey.api.core.PackagesResourceConfig</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>org.caboto.rest</param-value>
        </init-param>
    </servlet>

    <!-- Caboto startup -->
    <servlet>
        <servlet-name>Caboto Startup Servlet</servlet-name>
        <servlet-class>org.caboto.servlet.CabotoStartupServlet</servlet-class>
        <init-param>
            <param-name>configFile</param-name>
            <param-value>/startup.properties</param-value>
        </init-param>
        <init-param>
            <param-name>formatProps</param-name>
            <param-value>sdb.store.formatted</param-value>
        </init-param>
        <init-param>
            <param-name>sdbConfigFile</param-name>
            <param-value>/sdb.ttl</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>


    <!-- the main mapping for controllers -->

    <servlet-mapping>
        <servlet-name>crew</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <!-- the mappings for the RSS feeds -->
    <servlet-mapping>
        <servlet-name>crew</servlet-name>
        <url-pattern>/feeds/upcomingEvents.xml</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>crew</servlet-name>
        <url-pattern>/feeds/recentlyAdded.xml</url-pattern>
    </servlet-mapping>


    <servlet-mapping>
        <servlet-name>Jersey Spring Integration</servlet-name>
        <url-pattern>/annotation/*</url-pattern>
    </servlet-mapping>

    <!-- SECURITY CONSTRAINTS -->

    <security-constraint>
        <display-name>Things that need you to be authenticated</display-name>
        <web-resource-collection>
            <web-resource-name>Profile</web-resource-name>
            <description>User profile information</description>
            <url-pattern>/changePassword.do</url-pattern>
            <url-pattern>/displayProfile.do</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <description>Have to be a USER</description>
            <role-name>USERS</role-name>
        </auth-constraint>
    </security-constraint>


    <security-constraint>
        <display-name>pp</display-name>
        <web-resource-collection>
            <web-resource-name>DropBox</web-resource-name>
            <description></description>
            <url-pattern>/person/*</url-pattern>
            <http-method>POST</http-method>
            <http-method>DELETE</http-method>
        </web-resource-collection>
        <auth-constraint>
            <description>Have to be a USER</description>
            <role-name>USERS</role-name>
        </auth-constraint>
    </security-constraint>


    <login-config>
        <auth-method>FORM</auth-method>
        <realm-name>Crew Realm</realm-name>
        <form-login-config>
            <form-login-page>/login.jsp</form-login-page>
            <form-error-page>/login.jsp</form-error-page>
        </form-login-config>
    </login-config>


    <security-role>
        <description>The standard role for users</description>
        <role-name>USERS</role-name>
    </security-role>

</web-app>
